<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7d4775b0-9c93-4f0d-88b3-a26b47280442" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/common/common.module.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/common/config.const.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/common/hash.service.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/base.repository.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/base.repository.types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/database.types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/role/role.repository.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/role/role.wire.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/session/session.entity.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/session/session.repository.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/session/session.wire.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/get-session.decorator.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/has-session.decorator.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/permission-scope.guard.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/session.types.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-theme/src/index.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-types/src/user/PrivateUser.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/packages/vesna-web/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/node_modules/.bin/randomstring" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/database.meta.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/database.meta.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/database.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/database.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/rank/rank.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/role/role.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/rank/rank.repository.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/rank/rank.types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/rank/rank.wire.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.entity.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.entity.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.repository.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.repository.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.wire.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/database/user/user.wire.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/instinct.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/instinct.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/rank/rank.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/rank/rank.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/rank/rank.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/rank/rank.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/rank/rank.service.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/rank/rank.service.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/session/bearer-token.strategy.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/bearer-token.strategy.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/session/permission-scope.decorator.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/permission-scope.decorator.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/session/session-offline.decorator.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/session/session-offline.guard.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/session/session.controller.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/session.controller.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/session/session.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/session/session.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/user/user.module.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-api/src/user/user.module.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-api/src/user/user.service.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-types/src/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-types/src/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-types/src/role/Role.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-types/src/role/Role.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-types/src/role/RoleScope.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-types/src/role/RoleScope.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-types/src/session/Session.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-types/src/session/Session.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/packages/vesna-types/src/user/User.ts" beforeDir="false" afterPath="$PROJECT_DIR$/packages/vesna-types/src/user/User.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/yarn.lock" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="2AdvtpTSMBneZR5l0SmYh9Taryc" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="false" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="nodejs_package_manager_path" value="yarn" />
    <property name="ts.external.directory.path" value="$PROJECT_DIR$/demo/api/node_modules/typescript/lib" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/packages" />
    </key>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7d4775b0-9c93-4f0d-88b3-a26b47280442" name="Default Changelist" comment="" />
      <created>1655352493905</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1655352493905</updated>
      <workItem from="1655352495153" duration="2854000" />
      <workItem from="1655355510302" duration="3364000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="WindowStateProjectService">
    <state x="945" y="326" width="670" height="676" key="search.everywhere.popup" timestamp="1655357645509">
      <screen x="0" y="25" width="2560" height="1320" />
    </state>
    <state x="945" y="326" width="670" height="676" key="search.everywhere.popup/0.25.2560.1320@0.25.2560.1320" timestamp="1655357645509" />
    <state x="1010" y="577" key="vcs.readOnlyHandler.ReadOnlyStatusDialog" timestamp="1655352800504">
      <screen x="0" y="25" width="2560" height="1320" />
    </state>
    <state x="1010" y="577" key="vcs.readOnlyHandler.ReadOnlyStatusDialog/0.25.2560.1320@0.25.2560.1320" timestamp="1655352800504" />
  </component>
</project>